// TODO - ensure there's variables for everything a theme would want to control
// TODO - implement light / dark theme

/*
  A note about sizing the calendar...
  The intention is for the user to scale the calendar proportionally simply by
  controlling the `--dp-size` variable. As you can see, it is a relative size
  unit. This scales larger with no problem. Scaling super small is a different
  matter. If there is no absolute font-size (px, rem, etc.) declared somewhere
  higher in the DOM, the calendar will only scale down proportionally up to the 
  point where the font size hits 9px. Below 9px, the height of the calendar and
  the text size of the elements will no longer shrink. This shouldn't be a real-
  world problem through - who's looking to display the calendar scaled down to
  the point of incomprehension? In any case, if that's what you want to do, then
  simply declare an absolute font-size somewhere in the DOM tree above where the
  calendar is attached. A good choice would be something like the following
  which would set the styles of the entire document:

  :root {
    font-size: 16px;
  }
*/
.dp-calendar-container {
  // Non-theme variables.
  --dp-size: 1em;
  --dp-width: 15.625em; // 15.625em = 250px wide @ 16px/1rem
  --dp-radius: 0.325em;
  --dp-arrow-size: 1.2em;
  --dp-transition-time: 0.3s;

  // Theme variables.
  --dp-color: rgba(255, 255, 255, 0.92);
  --dp-bg: #242424;
  --dp-controls-color: var(--dp-color);
  --dp-control-arrows-color: rgba(255, 255, 255, 0.5);
  --dp-control-arrows-color-hover: #808080;
  --dp-control-arrows-bg-hover: rgba(255, 255, 255, 0.25);
  --dp-controls-bg: rgba(255, 255, 255, 0.5);
  // --dp-weekdays-color: ???
  --dp-day-hover-bg: #fa0;
  --dp-selected-date-color: #add8e6;
  // --dp-selected-date-bg: ???
  --dp-disabled-date-color: rgba(127, 127, 127, 0.92);
  // --dp-disabled-date-bg: ???
  // --dp-day-event-color: ??? // The little dot - namne this the same as the class name.
  --dp-overlay-color: var(--dp-color);
  --dp-overlay-bg: rgba(0, 0, 0, 0.5);

  // TODO - move these variables to the light media query below.
  &.light {
  }

  color: var(--dp-color);
  font-size: var(--dp-size);
  box-sizing: border-box;
  width: var(--dp-width);
  position: relative; // This will potentially be overwritten by JavaScript.
  user-select: none;
  border: 1px solid black; // TODO - make this a variable?
  border-radius: var(--dp-radius);
  line-height: 1.7;
  background: var(--dp-bg);
  overflow: hidden;

  * {
    box-sizing: border-box;
  }

  &.dp-dn {
    display: none;
  }

  .dp-controls-container,
  .dp-weekdays-container,
  .dp-days-container {
    transition: filter var(--dp-transition-time);
    filter: blur(0px);
  }

  &.dp-blur {
    .dp-controls-container,
    .dp-weekdays-container,
    .dp-days-container {
      filter: blur(6px);
    }
  }

  &.dp-centered {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.dp-calendar-container,
.dp-controls-container,
.dp-month-year-container {
  display: grid;
}

.dp-calendar-container {
  grid-template-rows: min-content min-content 1fr;
}

.dp-weekdays-container,
.dp-days-container {
  font-size: 1em;
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  align-items: center;
}

.dp-controls-container {
  grid-template-columns: repeat(3, min-content);
  justify-content: space-between;
  background: var(--dp-controls-bg);
  color: var(--dp-controls-color);
  font-weight: bold;
}

.dp-month-year-container {
  grid-template-columns: min-content min-content;
  gap: 0.5em;
  position: relative;
  cursor: pointer;

  &:after {
    content: '';
    width: 100%;
    border-bottom: 1px solid;
    position: absolute;
    top: 85%;
    opacity: 0;
    transition: opacity var(--dp-transition-time);
  }

  &:hover {
    &:after {
      opacity: 0.5;
    }
  }
}

.dp-arrow {
  display: flex;
  align-items: center;
  cursor: pointer;
  padding: 0 0.2em;
  transition: background-color calc(var(--dp-transition-time) / 2);

  &:hover {
    background-color: var(--dp-control-arrows-bg-hover);

    svg path {
      fill: var(--dp-control-arrows-color-hover);
    }
  }

  &.dp-arrow-left {
    border-top-right-radius: var(--dp-radius);
    border-bottom-right-radius: var(--dp-radius);
  }

  &.dp-arrow-right {
    border-top-left-radius: var(--dp-radius);
    border-bottom-left-radius: var(--dp-radius);

    svg {
      transform: rotate(180deg);
    }
  }

  // https://stackoverflow.com/a/24626986/2525633
  // Remove extra space below the SVG arrows which sit inside a divs.
  svg {
    display: block;
    width: var(--dp-arrow-size);
    height: var(--dp-arrow-size);
    transform: color calc(var(--dp-transition-time) / 3);

    path {
      fill: var(--dp-control-arrows-color);
    }
  }
}

.dp-weekdays-container {
  font-weight: bold;
  opacity: 0.9;
}

.dp-weekday,
.dp-day {
  text-align: center;
}

.dp-days-container:not(.dp-disable-transition) .dp-day {
  transition: background-color calc(var(--dp-transition-time) / 3);
}

.dp-day {
  border-radius: var(--dp-radius);
  cursor: pointer;

  &:hover:not(.dp-disabled-date):not(.dp-selected-date) {
    color: var(--dp-bg);
    background: var(--dp-day-hover-bg);
  }

  &.dp-selected-date {
    background: var(--dp-selected-date-color);
    color: var(--dp-bg);
  }

  &.dp-dn {
    display: none;
  }

  &.dp-today {
    font-weight: bold;
    text-decoration: underline;
  }

  &.dp-disabled-date {
    cursor: not-allowed;
    color: var(--dp-disabled-date-color);
  }
}

.dp-overlay-container {
  display: grid;
  grid-template-rows: min-content 1fr min-content;
  animation-duration: var(--dp-transition-time);
  animation-fill-mode: both; // At the end of the animation, the styles will remain.
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: var(--dp-radius);
  color: var(--dp-overlay-color);

  // TODO - for dark mode, can we darken the calendar 1st (with another background layer)
  // and then add this ligher layer on top?
  background: var(--dp-overlay-bg);
}

.dp-overlay-input-container {
  display: grid;
  grid-template-columns: 15% 70% 15%;
}

.dp-overlay-input {
  width: 100%;
  grid-column: 2;
  text-align: center;
  border: none;
  border-bottom: 1px solid;
  font-family: inherit;
  font-size: inherit;
  background: transparent;
  color: inherit;

  &::placeholder {
    color: inherit;
    opacity: 0.5;
    font-style: italic;
  }
}

.dp-overlay-close {
  cursor: pointer;
  width: 100%;
  text-align: center;
}

.dp-overlay-months-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  justify-items: center;
  align-items: center;
}

.dp-overlay-month {
  cursor: pointer;
  opacity: 0.7;
  transition: opacity calc(var(--dp-transition-time) / 2);

  &:hover {
    opacity: 1;
  }
}

.dp-overlay-submit {
  justify-self: center;
  margin-bottom: 0.5em;
  font-size: inherit;
  font-family: inherit;
  padding: 0.25em 0.5em;
  border-radius: var(--dp-radius);
  border: 1px solid;
  background: var(--dp-bg);
  color: inherit;
  cursor: pointer;
  transition: filter calc(var(--dp-transition-time) / 2);

  &:disabled {
    filter: contrast(30%) brightness(70%);
  }

  // TODO - add hover styles to button.
}

.dp-overlay-in {
  animation-name: dpOverlayIn;
}

.dp-overlay-out {
  animation-name: dpOverlayOut;
}

.dp-overlay-shown {
  opacity: 1;
  z-index: 1;
}

.dp-overlay-hidden {
  opacity: 0;
  z-index: -1;
}

// https://stackoverflow.com/a/57924649/2525633
@keyframes dpOverlayIn {
  0% {
    opacity: 0;
    z-index: 1;
  }
  100% {
    opacity: 1;
    z-index: 1;
  }
}

@keyframes dpOverlayOut {
  0% {
    opacity: 1;
    z-index: 1;
  }
  100% {
    opacity: 0;
    z-index: -1;
  }
}

// Light mode - we default to a dark theme.
@media (prefers-color-scheme: light) {
  .dp-calendar-container {
    // TODO - add updated variable values here.
  }
}
