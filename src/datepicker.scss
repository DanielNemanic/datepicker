.dp-calendar-container {
  --dp-size: 1em;
  --dp-width: 15.625em; // 15.625em = 250px wide @ 16px/1rem
  --dp-radius: calc(var(--dp-width) * 0.02083);
  --dp-arrow-size: calc(var(--dp-width) / 12);

  font-size: var(--dp-size);
  box-sizing: border-box;
  width: var(--dp-width);
  position: relative; // TODO - this is temporary. Should be dynamically set in JS.
  user-select: none;
  border: 1px solid currentColor;
  border-radius: var(--dp-radius);

  // Needed! If line-height were specified in any parent element up the DOM
  // tree, it would cause the calendar rows to remain static in height. This
  // breaks our ability to scale the calendar and all it's elements dynamically
  // by simply adjusting the font-size on the calendars container element. To
  // avoid that, we set line-height to initial to prevent parent styling.
  line-height: initial;

  * {
    box-sizing: border-box;
  }

  // https://stackoverflow.com/a/24626986/2525633
  // Remove extra space below the SVG arrows which sit inside a divs.
  svg {
    display: block;
    width: var(--dp-arrow-size);
    height: var(--dp-arrow-size);

    path {
      fill: currentColor;
    }
  }

  &.dp-dn {
    display: none;
  }
}

.dp-calendar-container,
.dp-controls-container,
.dp-month-year-container {
  display: grid;
}

.dp-calendar-container {
  grid-template-rows: repeat(3, min-content);
}

.dp-weekdays-container,
.dp-days-container {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  font-size: 1em;
}

.dp-controls-container {
  grid-template-columns: repeat(3, min-content);
  justify-content: space-between;
}

.dp-month-year-container {
  grid-template-columns: min-content min-content;
  gap: 0.5em;
}

.dp-arrow {
  display: flex;
  align-items: center;

  &.dp-arrow-right svg {
    transform: rotate(180deg);
  }
}

.dp-weekday,
.dp-day {
  text-align: center;
}

.dp-day {
  &.dp-dn {
    display: none;
  }
}

.dp-overlay-container {
  animation-duration: 0.5s;
  animation-fill-mode: both; // At the end of the animation, the styles will remain.
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 255, 0.2);
}

.dp-overlay-in {
  animation-name: dpOverlayIn;
}

.dp-overlay-out {
  animation-name: dpOverlayOut;
}

.dp-overlay-shown {
  opacity: 1;
  z-index: 1;
}

.dp-overlay-hidden {
  opacity: 0;
  z-index: -1;
}

// https://stackoverflow.com/a/57924649/2525633
@keyframes dpOverlayIn {
  0% {
    opacity: 0;
    z-index: 1;
  }
  100% {
    opacity: 1;
    z-index: 1;
  }
}

@keyframes dpOverlayOut {
  0% {
    opacity: 1;
    z-index: 1;
  }
  100% {
    opacity: 0;
    z-index: -1;
  }
}
